DDOC_DESCRIPTION = <div class="ddoc_description">
    <p>$0</p>
</div>$(LF)

DDOC_HEADER_ANCHOR = <div></div>
DDOC_ANCHOR = <a href="#$1" id="$1"></a>

DDOC_DECL = <div class="ddoc_decl">
  <section>
    <p>$(B $0)</p>
  </section>
</div>

DDOC_DECL_DD = <div class="ddoc_decl_dd">
  <p>$0</p>
</div>

DDOC_SEE_ALSO = <div class="ddoc_see_also">
  <h4>See also:</h4>
  <p>$0</p>
</div>$(LF)

DDOC_DEPRECATED = <div class="ddoc_deprecated">
  <h4>Deprecated:</h4>
    <p>$(RED $0)</p>
</div>$(LF)

DDOC_ENUM_MEMBERS = <ul class="ddoc_enum_members">
  $0
</ul>

D_CODE =
<section class="code_section" style="background-color: #f5f5f5; border: 1px solid #bbb;">
    <code style="white-space: pre-wrap;">$0</code>
</section>

DDOC_PSYMBOL = $0

DDOC_PARAM = $0

WARNING = <h4>Warning</h4><p>$(RED $0)</p>

INPUTSOUNDFILE_LINK = <a href="../audio/inputsoundfile.html" title="Provide read access to sound files.">InputSoundFile</a>
LISTENER_LINK = <a href="../audio/listener.html" title="The audio listener is the point in the scene from where all the sounds are heard.">Listener</a>
MUSIC_LINK = <a href="../audio/music.html" title="Streamed music played from an audio file.">Music</a>
OUTPUTSOUNDFILE_LINK = <a href="../audio/outputsoundfile.html" title="Provide write access to sound files.">OutputSoundFile</a>
SOUND_LINK = <a href="../audio/sound.html" title="Regular sound that can be played in the audio environment.">Sound</a>
SOUNDBUFFER_LINK = <a href="../audio/soundbuffer.html" title="Storage for audio samples defining a sound.">SoundBuffer</a>
SOUNDBUFFERRECORDER_LINK = <a href="../audio/soundbufferrecorder.html" title="Specialized SoundRecorder which stores the captured audio data into a sound buffer.">SoundBufferRecorder</a>
SOUNDRECORDER_LINK = <a href="../audio/soundrecorder.html" title="Abstract base class for capturing sound data.">SoundRecorder</a>
SOUNDSOURCE_LINK = <a href="../audio/soundsource.html" title="Base class defining a sound's properties.">SoundSource</a>
SOUNDSTREAM_LINK = <a href="../audio/soundstream.html" title="Abstract base class for streamed audio sources.">SoundStream</a>

BLENDMODE_LINK = <a href="../graphics/blendmode.html" title="Blending modes for drawing.">BlendMode</a>
CIRCLESHAPE_LINK = <a href="../graphics/circleshape.html" title="Specialized shape representing a circle.">CircleShape</a>
COLOR_LINK = <a href="../graphics/color.html" title="Color is a utility struct for manipulating 32-bits RGBA colors.">Color</a>
CONVEXSHAPE_LINK = <a href="../graphics/convexshape.html" title="Specialized shape representing a convex polygon.">ConvexShape</a>
DRAWABLE_LINK = <a href="../graphics/drawable.html" title="Interface for objects that can be drawn to a render target.">Drawable</a>
FONT_LINK = <a href="../graphics/font.html" title="Class for loading and manipulating character fonts.">Font</a>
GLSL_LINK = <a href="../graphics/glsl.html" title="The module containing GLSL types.">Glsl</a>
GLYPH_LINK = <a href="../graphics/glyph.html" title="Structure describing a glyph.">Glyph</a>
IMAGE_LINK = <a href="../graphics/image.html" title="Class for loading, manipulating and saving images.">Image</a>
PRIMITIVETYPE_LINK = <a href="../graphics/primitivetype.html" title="Types of primitives that a VertexArray can render.">PrimitiveType</a>
RECT_LINK = <a href="../graphics/rect.html" title="Utility class for manipulating 2D axis aligned rectangles.">Rect</a>
RECTANGLESHAPE_LINK = <a href="../graphics/rectangleshape.html" title="Specialized shape representing a rectangle.">RectangleShape</a>
RENDERSTATES_LINK = <a href="../graphics/renderstates.html" title="Define the states used for drawing to a RenderTarget.">RenderStates</a>
RENDERTARGET_LINK = <a href="../graphics/rendertarget.html" title="Base interface for all render targets (window, texture, ...).">RenderTarget</a>
RENDERTEXTURE_LINK = <a href="../graphics/rendertexture.html" title="Target for off-screen 2D rendering into a texture.">RenderTexture</a>
RENDERWINDOW_LINK = <a href="../graphics/renderwindow.html" title="Window that can serve as a target for 2D drawing.">RenderWindow</a>
SHADER_LINK = <a href="../graphics/shader.html" title="Shader class (vertex and fragment).">Shader</a>
SHAPE_LINK = <a href="../graphics/shape.html" title="Base class for textured shapes with outline.">Shape</a>
SPRITE_LINK = <a href="../graphics/sprite.html" title="Drawable representation of a texture, with its own transformations, color, etc.">Sprite</a>
TEXT_LINK = <a href="../graphics/text.html" title="Graphical text that can be drawn to a render target.">Text</a>
TEXTURE_LINK = <a href="../graphics/texture.html" title="Image living on the graphics card that can be used for drawing.">Texture</a>
TRANSFORM_LINK = <a href="../graphics/transform.html" title="Define a 3x3 transform matrix.">Transform</a>
TRANSFORMABLE_LINK = <a href="../graphics/transformable.html" title="Decomposed transform defined by a position, a rotation, and a scale.">Transformable</a>
VERTEX_LINK = <a href="../graphics/vertex.html" title="Define a point with color and texture coordinates.">Vertex</a>
VERTEXARRAY_LINK = <a href="../graphics/vertexarray.html" title="Define a set of one or more 2D primitives.">VertexArray</a>
VIEW_LINK = <a href="../graphics/view.html" title="2D camera that defines what region is shown on screen.">View</a>

FTP_LINK = <a href="../network/ftp.html" title="An FTP client.">Ftp</a>
HTTP_LINK = <a href="../network/http.html" title="A HTTP client.">Http</a>
IPADDRESS_LINK = <a href="../network/ipaddress.html" title="Encapsulate an IPv4 network address.">IpAddress</a>
PACKET_LINK = <a href="../network/packet.html" title="Utility class to build blocks of data to transfer over the network.">Packet</a>
SOCKET_LINK = <a href="../network/socket.html" title="Base interface for all the socket types.">Socket</a>
SOCKETSELECTOR_LINK = <a href="../network/socketselector.html" title="Multiplexer that allows to read from multiple sockets.">SocketSelector</a>
TCPLISTENER_LINK = <a href="../network/tcplistener.html" title="Socket that listens to new TCP connections.">TcpListener</a>
TCPSOCKET_LINK = <a href="../network/tcpsocket.html" title="Specialized socket using the TCP protocol.">TcpSocket</a>
UDPSOCKET_LINK = <a href="../network/udpsocket.html" title="Specialized socket using the UDP protocol.">UdpSocket</a>

CLOCK_LINK = <a href="../system/clock.html" title="Utility class that measures the elapsed time.">Clock</a>
ERR_LINK = <a href="../system/err.html" title="Standard std.stdio.File instance used by DSFML to output warnings and errors.">err</a>
INPUTSTREAM_LINK = <a href="../system/inputstream.html" title="Interface for custom file input streams.">InputStream</a>
LOCK_LINK = <a href="../system/lock.html" title="Automatic wrapper for locking and unlocking mutexes.">Lock</a>
MUTEX_LINK = <a href="../system/mutex.html" title="Blocks concurrent access to shared resources from multiple threads.">Mutex</a>
THREAD_LINK = <a href="../system/thread.html" title="Utility class to manipulate threads.">Thread</a>
TIME_LINK = <a href="../system/time.html" title="Represents a time value.">Thread</a>
VECTOR2_LINK = <a href="../system/vector2.html" title="Utility template struct for manipulating 2-dimensional vectors.">Vector2</a>
VECTOR3_LINK = <a href="../system/vector3.html" title="Utility template struct for manipulating 3-dimensional vectors.">Vector3</a>

CONTEXT_LINK = <a href="../window/context.html" title="Class holding a valid drawing context.">Context</a>
CONTEXTSETTINGS_LINK = <a href="../window/contextsettings.html" title="Structure defining the settings of the OpenGL context attached to a window.">ContextSettings</a>
EVENT_LINK = <a href="../window/event.html" title="Defines a system event and its parameters.">Event</a>
JOYSTICK_LINK = <a href="../window/joystick.html" title="Give access to the real-time state of the joysticks.">Joystick</a>
KEYBOARD_LINK = <a href="../window/keyboard.html" title="">Keyboard</a>
MOUSE_LINK = <a href="../window/mouse.html" title="Give access to the real-time state of the mouse.">Mouse</a>
SENSOR_LINK = <a href="../window/sensor.html" title="Give access to the real-time state of the sensors.">Sensor</a>
TOUCH_LINK = <a href="../window/touch.html" title="Give access to the real-time state of the touches.">Touch</a>
VIDEOMODE_LINK = <a href="../window/videomode.html" title="VideoMode defines a video mode (width, height, bpp).">VideoMode</a>
WINDOW_LINK = <a href="../window/window.html" title="Window that serves as a target for OpenGL rendering.">Window</a>
WINDOWHANDLE_LINK = <a href="../window/windowhandle.html" title="Define a low-level window handle type, specific to each platform.">WindowHandle</a>


DDOC =
<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8">
    <title>$(TITLE)</title>
    <style type="text/css" media="screen">
    * {
        background: transparent none repeat scroll 0 0;
        border: 0 none;
        font-size: 100%;
        margin: 0;
        outline: 0 none;
        padding: 0;
        vertical-align: baseline;
    }

    body {
        background-color: transparent;
        color: rgba(0, 0, 0, 1);
        font-size: 62.5%;
        margin: 0;
        border: 0;
        left: 0;
        top: 0;
        padding: 0;
        font-family: Ubuntu, sans-serif;
    }

    .color_red { color: #dc322f; }
    .color_blue { color: #268bd2; }
    .color_green { color: #859901; }
    .color_yellow { color: #b58901; }
    .color_black { color: black; }
    .color_white { color: white; }

    .font_big {
        font-size: 1.2em;
    }

    /* Section containing classes, ... */
    .ddoc_module_members_section {
        padding: 1px 0 0;
    }


    /* Every D declaration (class, struct, function, ...) */
    .ddoc_decl {
        height: 100%;
        left: 0;
        top: 0;
        padding: 0;
        margin: 0;
        border-top: 1px;
        border-left: 1px;
        border-right: 1px;
        border-style: solid;
        border-color: #A8B8D9;
        border-collapse: collapse;
        border-top-left-radius: 4px;
        border-top-right-radius: 4px;
        background-color: #eeeeee;
        padding: 10px;
    }

    /* Description of a declaration */
    .ddoc_decl_dd
    {
        background-color: white;
        border: 1px;
        border-style: solid;
        border-color: #A8B8D9;
        border-collapse: collapse;
        border-bottom-left-radius: 4px;
        border-bottom-right-radius: 4px;
        padding: 10px;
    }

    /* Every h4 title (usually in decl_dd) (Parameters, Returns, ...) */
    h4 {
        font-size: 1.4em;
        line-height: 1.5;
        margin-top: 21px;
    }

    /* module containing everything but content wrapper */
    .module {
        border-color: transparent;
        background-color: rgba(255, 255, 255, 1);
        border-color: currentColor rgba(233, 233, 233, 1) rgba(233, 233, 233, 1);
        border-image: none;
        border-style: none solid solid;
        border-width: 0 1px 1px;
        box-shadow: 0 0 1px rgba(0, 0, 0, 0.07);
        display: block;
        margin-left: 0;
        min-height: calc(100% - 173px);
        overflow: auto;
        padding-bottom: 100px;
        padding: 15px;
    }

    /* Lists in module/function/... description */
    .ddoc_description > ul, .ddoc_summary > ul
    {
        margin-left: 10px;
        font-size: 11pt;
    }

    /* The main div containing everything */
    .content_wrapper {
        background-color: rgba(242, 242, 242, 1);
        margin: 0 auto;
        max-width: 980px;
    }

    /* Main sections */
    .ddoc_sections, .ddoc_module_members_section {
        padding: 15px 25px 30px;
    }

    /* Section in decl_dd */
    .ddoc_sections {
        padding: 0;
    }

    /* paragraph */
    p, .ddoc_description {
        color: rgba(65, 65, 65, 1);
        font-size: 11pt;
        line-height: 145%;
    }

    /* Module name at the top */
    .ddoc .module_name {
        color: black;
        display: block;
        font-size: 32px;
        font-weight: normal;
        margin-bottom: 0;
        padding: 15px 0;
    }

    /* Links */
    a {
        color: rgba(0, 136, 204, 1);
        text-decoration: none;
    }

    /* When mouse's hover links */
    a:hover {
        color: rgba(0, 136, 204, 1);
        text-decoration: underline;
    }

    /* Parent classes */
    .ddoc_psuper_symbol {
        color: rgba(170, 96, 0, 1);
    }

    /* Text marked as code, with a "`" symbol */
    .code {
        font-size: 10pt;
        font-family: Consolas, Liberation-Mono;
        font-style: italic;
    }

    /*
     * Code delimited by "---"
     */
    .code_section
    {
        margin: 10px;
        border: 1px;
        border-style: solid;
        padding: 13px;
    }

    .code_section code {
        color: #000;
        font-family: sans-serif, Consolas, "Liberation Mono", Courier, monospace;
        font-size: 10pt;
    }

    .punctuation {
        color: rgba(0, 0, 0, 1);
    }

    .comment {
        color: rgba(0, 131, 18, 1);
    }

    .operator {
        color: black;
    }

    .keyword {
        color: rgba(170, 13, 145, 1);
    }

    .keyword_type {
        color: rgba(170, 51, 145, 1);
    }

    .string_literal {
        color: rgba(196, 26, 22, 1);
    }

    // END Code

    /*
     * Params
     *
     */
    .ddoc_param_row td {
        padding: 10px;
        margin: 0;
    }

    .graybox {
        border: 1px solid rgba(233, 233, 233, 1);
        border-collapse: collapse;
        border-spacing: 0;
        empty-cells: hide;
        text-align: left;
    }

    .graybox p {
        margin: 0;
        min-width: 50px;
        font-size: 11pt;
    }

    /* END Params */

    /*
     * Every element (class, struct, delegates, functions, ...)
    **/
    .ddoc_members {
        margin-bottom: 5px;
        margin-left: 15px;
        padding: 15px;
    }

    .ddoc_member {
        display: table;
        min-width: 100%;
        margin-bottom: 15px;
        list-style-type: none;
    }

    /* END Every element */

    /* Enums */
    .ddoc_enum_members {
        margin-left: 15px;
        padding: 15px;
    }

    /*
     * Tables
     * https://dlang.org/spec/ddoc.html#tables
    **/
    table
    {
        font-size: 11pt;
        border-collapse: collapse;
    }

    table th {
        padding: 5px;
    }

    td {
        border: 1px solid rgba(233, 233, 233, 1);
        margin: 0;
        padding: 5px 25px 5px 10px;
        vertical-align: middle;
    }

    table thead > tr:first-child > td {
        border-top: 0 none;
    }

    table tr:last-child > td {
        border-bottom: 0 none;
    }

    table tr > td:first-child {
        border-left: 0 none;
    }

    table tr > td:last-child {
        border-right: 0 none;
    }

    /* END Tables */
    </style>
  </head>
  <body id="ddoc_main" class="ddoc dlang">
    <div class="content_wrapper">
      <article class="module">
        <h1 class="module_name">$(TITLE)</h1>
        <section id="module_content">$(BODY)</section>
      </article>
    </div>
  </body>
</html>$(LF)
